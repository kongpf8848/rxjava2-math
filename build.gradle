buildscript {
  repositories {
      jcenter()
  }
  dependencies { 
     classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
     classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
  }
}

apply plugin: 'java'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group 'com.github.kongpf8848'
version '1.0.0'

sourceCompatibility = 1.6
targetCompatibility = 1.6

repositories {
    jcenter()
}
dependencies {
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
}

/*
def siteUrl = 'https://github.com/kongpf8848/rxjava2-math'
def gitUrl = 'https://github.com/kongpf8848/rxjava2-math.git'
def libraryDescription= 'Math operators for RxJava2'

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'jar'
                artifactId project.name
                version version
                name project.name
                description libraryDescription
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name 'kongpf'
                        email 'kongpf8848@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = project.name
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
        version {
            desc = libraryDescription
            gpg {
                sign = true
                passphrase = properties.getProperty("bintray.gpg.password")
            }
        }
    }
}
*/


